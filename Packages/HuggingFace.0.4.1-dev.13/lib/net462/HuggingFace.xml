<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HuggingFace</name>
    </assembly>
    <members>
        <member name="T:HuggingFace.HuggingFaceClient">
            <summary>
            APIs for sampling from and fine-tuning language models<br/>
            If no httpClient is provided, a new one will be created.<br/>
            If no baseUri is provided, the default baseUri from OpenAPI spec will be used.
            </summary>
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.Microsoft#Extensions#AI#IChatClient#GetService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.Microsoft#Extensions#AI#IChatClient#GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.Microsoft#Extensions#AI#IChatClient#GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.AuthorizeUsingBearer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.#ctor(System.String,System.Net.Http.HttpClient,System.Uri,System.Collections.Generic.List{HuggingFace.EndPointAuthorization},System.Boolean)">
            <inheritdoc cref="M:HuggingFace.HuggingFaceClient.#ctor(System.Net.Http.HttpClient,System.Uri,System.Collections.Generic.List{HuggingFace.EndPointAuthorization},System.Boolean)"/>
        </member>
        <member name="F:HuggingFace.HuggingFaceClient.DefaultBaseUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.HuggingFaceClient.HttpClient">
            <inheritdoc/>
        </member>
        <member name="P:HuggingFace.HuggingFaceClient.BaseUri">
            <inheritdoc/>
        </member>
        <member name="P:HuggingFace.HuggingFaceClient.Authorizations">
            <inheritdoc/>
        </member>
        <member name="P:HuggingFace.HuggingFaceClient.ReadResponseAsString">
            <inheritdoc/>
        </member>
        <member name="P:HuggingFace.HuggingFaceClient.JsonSerializerContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.#ctor(System.Net.Http.HttpClient,System.Uri,System.Collections.Generic.List{HuggingFace.EndPointAuthorization},System.Boolean)">
            <summary>
            Creates a new instance of the HuggingFaceClient.
            If no httpClient is provided, a new one will be created.
            If no baseUri is provided, the default baseUri from OpenAPI spec will be used.
            </summary>
            <param name="httpClient">The HttpClient instance. If not provided, a new one will be created.</param>
            <param name="baseUri">The base URL for the API. If not provided, the default baseUri from OpenAPI spec will be used.</param>
            <param name="authorizations">The authorizations to use for the requests.</param>
            <param name="disposeHttpClient">Dispose the HttpClient when the instance is disposed. True by default.</param>
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.GenerateTextAsync(System.String,HuggingFace.GenerateTextRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a completion for the provided prompt and parameters.
            </summary>
            <param name="modelId"></param>
            <param name="request"></param>
            <param name="cancellationToken">The token to cancel the operation with</param>
            <exception cref="T:HuggingFace.ApiException"></exception>
        </member>
        <member name="M:HuggingFace.HuggingFaceClient.GenerateTextAsync(System.String,System.String,HuggingFace.GenerateTextRequestParameters,HuggingFace.GenerateTextRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a completion for the provided prompt and parameters.
            </summary>
            <param name="modelId"></param>
            <param name="inputs">
            The prompt that you want to complete.<br/>
            Example: This is a test.
            </param>
            <param name="parameters"></param>
            <param name="options"></param>
            <param name="cancellationToken">The token to cancel the operation with</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:HuggingFace.StringExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.StringExtensions.AsHumanMessage(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:HuggingFace.StringExtensions.AsAssistantMessage(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:HuggingFace.StringExtensions.AsPrompt(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:HuggingFace.StringExtensions.AsPrompt(System.String[])">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:HuggingFace.AnyOf`2">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.AnyOf`2.Value1">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.AnyOf`2.IsValue1">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.op_Implicit(`0)~HuggingFace.AnyOf{`0,`1}">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.op_Implicit(HuggingFace.AnyOf{`0,`1})~`0">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.#ctor(`0)">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.AnyOf`2.Value2">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.AnyOf`2.IsValue2">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.op_Implicit(`1)~HuggingFace.AnyOf{`0,`1}">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.op_Implicit(HuggingFace.AnyOf{`0,`1})~`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.#ctor(`1)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.#ctor(`0,`1)">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.AnyOf`2.Object">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.Match``1(System.Func{`0,``0},System.Func{`1,``0},System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.Match(System.Action{`0},System.Action{`1},System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.GetHashCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.Equals(HuggingFace.AnyOf{`0,`1})">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.op_Equality(HuggingFace.AnyOf{`0,`1},HuggingFace.AnyOf{`0,`1})">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.op_Inequality(HuggingFace.AnyOf{`0,`1},HuggingFace.AnyOf{`0,`1})">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.Equals(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.ToJson(System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.FromJson(System.String,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.FromJson(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.AnyOf`2.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="T:HuggingFace.ApiException">
            <summary>
            Represents an exception thrown by the API.
            </summary>
        </member>
        <member name="P:HuggingFace.ApiException.StatusCode">
            <summary>
            The HTTP status code of the response.
            </summary>
        </member>
        <member name="P:HuggingFace.ApiException.ResponseBody">
            <summary>
            The response body.
            </summary>
        </member>
        <member name="P:HuggingFace.ApiException.ResponseHeaders">
            <summary>
            The response headers.
            </summary>
        </member>
        <member name="M:HuggingFace.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ApiException"/> class.
            </summary>
        </member>
        <member name="M:HuggingFace.ApiException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ApiException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="M:HuggingFace.ApiException.#ctor(System.String,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ApiException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="T:HuggingFace.ApiException`1">
            <summary>
            Represents an exception thrown by the API.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HuggingFace.ApiException`1.ResponseObject">
            <summary>
            The response object.
            </summary>
        </member>
        <member name="M:HuggingFace.ApiException`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ApiException"/> class.
            </summary>
        </member>
        <member name="M:HuggingFace.ApiException`1.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ApiException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="M:HuggingFace.ApiException`1.#ctor(System.String,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ApiException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="T:HuggingFace.IHuggingFaceClient">
            <summary>
            APIs for sampling from and fine-tuning language models<br/>
            If no httpClient is provided, a new one will be created.<br/>
            If no baseUri is provided, the default baseUri from OpenAPI spec will be used.
            </summary>
        </member>
        <member name="M:HuggingFace.IHuggingFaceClient.AuthorizeUsingBearer(System.String)">
            <summary>
            Authorize using bearer authentication.
            </summary>
            <param name="apiKey"></param>
        </member>
        <member name="P:HuggingFace.IHuggingFaceClient.HttpClient">
            <summary>
            The HttpClient instance.
            </summary>
        </member>
        <member name="P:HuggingFace.IHuggingFaceClient.BaseUri">
            <summary>
            The base URL for the API.
            </summary>
        </member>
        <member name="P:HuggingFace.IHuggingFaceClient.Authorizations">
            <summary>
            The authorizations to use for the requests.
            </summary>
        </member>
        <member name="P:HuggingFace.IHuggingFaceClient.ReadResponseAsString">
            <summary>
            Gets or sets a value indicating whether the response content should be read as a string.
            True by default in debug builds, false otherwise.
            </summary>
        </member>
        <member name="P:HuggingFace.IHuggingFaceClient.JsonSerializerContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.IHuggingFaceClient.GenerateTextAsync(System.String,HuggingFace.GenerateTextRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a completion for the provided prompt and parameters.
            </summary>
            <param name="modelId"></param>
            <param name="request"></param>
            <param name="cancellationToken">The token to cancel the operation with</param>
            <exception cref="T:HuggingFace.ApiException"></exception>
        </member>
        <member name="M:HuggingFace.IHuggingFaceClient.GenerateTextAsync(System.String,System.String,HuggingFace.GenerateTextRequestParameters,HuggingFace.GenerateTextRequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a completion for the provided prompt and parameters.
            </summary>
            <param name="modelId"></param>
            <param name="inputs">
            The prompt that you want to complete.<br/>
            Example: This is a test.
            </param>
            <param name="parameters"></param>
            <param name="options"></param>
            <param name="cancellationToken">The token to cancel the operation with</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:HuggingFace.ErrorResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.ErrorResponse.Error">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.ErrorResponse.AdditionalProperties">
            <summary>
            Additional properties that are not explicitly defined in the schema
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.#ctor(HuggingFace.AnyOf{System.String,System.Collections.Generic.IList{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ErrorResponse" /> class.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:HuggingFace.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.ErrorResponse" /> class.
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.ToJson(System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.FromJson(System.String,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.FromJson(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.ErrorResponse.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="T:HuggingFace.GenerateTextRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequest.Inputs">
            <summary>
            The prompt that you want to complete.<br/>
            Example: This is a test.
            </summary>
            <example>This is a test.</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequest.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequest.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequest.AdditionalProperties">
            <summary>
            Additional properties that are not explicitly defined in the schema
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.#ctor(System.String,HuggingFace.GenerateTextRequestParameters,HuggingFace.GenerateTextRequestOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextRequest" /> class.
            </summary>
            <param name="inputs">
            The prompt that you want to complete.<br/>
            Example: This is a test.
            </param>
            <param name="parameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextRequest" /> class.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.ToJson(System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.FromJson(System.String,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.FromJson(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequest.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="T:HuggingFace.GenerateTextRequestOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestOptions.UseCache">
            <summary>
            There is a cache layer on the inference API to speedup requests we have already seen. Most models can use those results as is as models are deterministic (meaning the results will be the same anyway). However if you use a non deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query.<br/>
            Default Value: true
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestOptions.WaitForModel">
            <summary>
            If the model is not ready, wait for it instead of receiving 503. It limits the number of requests required to get your inference done. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to known places.<br/>
            Default Value: false
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestOptions.AdditionalProperties">
            <summary>
            Additional properties that are not explicitly defined in the schema
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextRequestOptions" /> class.
            </summary>
            <param name="useCache">
            There is a cache layer on the inference API to speedup requests we have already seen. Most models can use those results as is as models are deterministic (meaning the results will be the same anyway). However if you use a non deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query.<br/>
            Default Value: true
            </param>
            <param name="waitForModel">
            If the model is not ready, wait for it instead of receiving 503. It limits the number of requests required to get your inference done. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to known places.<br/>
            Default Value: false
            </param>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextRequestOptions" /> class.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.ToJson(System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.FromJson(System.String,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.FromJson(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestOptions.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="T:HuggingFace.GenerateTextRequestParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.TopK">
            <summary>
            Integer to define the top tokens considered within the sample operation to create new text.<br/>
            Example: 1
            </summary>
            <example>1</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.TopP">
            <summary>
            Float to define the tokens that are within the sample operation of text generation.<br/>
            Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p.<br/>
            Example: 1
            </summary>
            <example>1</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.Temperature">
            <summary>
            The temperature of the sampling operation.<br/>
            1 means regular sampling,<br/>
            0 means always take the highest score,<br/>
            100.0 is getting closer to uniform probability.<br/>
            Default Value: 1<br/>
            Example: 1
            </summary>
            <example>1</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.RepetitionPenalty">
            <summary>
            The more a token is used within generation the more it is penalized to not be picked in successive generation passes.<br/>
            Example: 1
            </summary>
            <example>1</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.MaxNewTokens">
            <summary>
            The amount of new tokens to be generated, this does not include the input length it is a estimate of the size of generated text you want.<br/>
            Each new tokens slows down the request, so look for balance between response times and length of text generated.<br/>
            Example: 250
            </summary>
            <example>250</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.MaxTime">
            <summary>
            The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit. Use that in combination with max_new_tokens for best results.<br/>
            Example: 1
            </summary>
            <example>1</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.ReturnFullText">
            <summary>
            If set to False, the return results will not contain the original query making it easier for prompting.<br/>
            Default Value: true
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.NumReturnSequences">
            <summary>
            The number of proposition you want to be returned.<br/>
            Default Value: 1<br/>
            Example: 1
            </summary>
            <example>1</example>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.DoSample">
            <summary>
            Whether or not to use sampling, use greedy decoding otherwise.<br/>
            Default Value: true
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextRequestParameters.AdditionalProperties">
            <summary>
            Additional properties that are not explicitly defined in the schema
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.#ctor(System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Object,System.Nullable{System.Int32},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextRequestParameters" /> class.
            </summary>
            <param name="topK">
            Integer to define the top tokens considered within the sample operation to create new text.<br/>
            Example: 1
            </param>
            <param name="topP">
            Float to define the tokens that are within the sample operation of text generation.<br/>
            Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p.<br/>
            Example: 1
            </param>
            <param name="temperature">
            The temperature of the sampling operation.<br/>
            1 means regular sampling,<br/>
            0 means always take the highest score,<br/>
            100.0 is getting closer to uniform probability.<br/>
            Default Value: 1<br/>
            Example: 1
            </param>
            <param name="repetitionPenalty">
            The more a token is used within generation the more it is penalized to not be picked in successive generation passes.<br/>
            Example: 1
            </param>
            <param name="maxNewTokens">
            The amount of new tokens to be generated, this does not include the input length it is a estimate of the size of generated text you want.<br/>
            Each new tokens slows down the request, so look for balance between response times and length of text generated.<br/>
            Example: 250
            </param>
            <param name="maxTime">
            The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit. Use that in combination with max_new_tokens for best results.<br/>
            Example: 1
            </param>
            <param name="returnFullText">
            If set to False, the return results will not contain the original query making it easier for prompting.<br/>
            Default Value: true
            </param>
            <param name="numReturnSequences">
            The number of proposition you want to be returned.<br/>
            Default Value: 1<br/>
            Example: 1
            </param>
            <param name="doSample">
            Whether or not to use sampling, use greedy decoding otherwise.<br/>
            Default Value: true
            </param>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextRequestParameters" /> class.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.ToJson(System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.FromJson(System.String,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.FromJson(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextRequestParameters.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="T:HuggingFace.GenerateTextResponseValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextResponseValue.GeneratedText">
            <summary>
            The resulting completion up to and excluding the stop sequences.
            </summary>
        </member>
        <member name="P:HuggingFace.GenerateTextResponseValue.AdditionalProperties">
            <summary>
            Additional properties that are not explicitly defined in the schema
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextResponseValue" /> class.
            </summary>
            <param name="generatedText">
            The resulting completion up to and excluding the stop sequences.
            </param>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.GenerateTextResponseValue" /> class.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.ToJson(System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the current instance to a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.FromJson(System.String,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.FromJson(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON string using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.Serialization.JsonSerializerContext)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerContext.
            </summary>
        </member>
        <member name="M:HuggingFace.GenerateTextResponseValue.FromJsonStreamAsync(System.IO.Stream,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON stream using the provided JsonSerializerOptions.
            </summary>
        </member>
        <member name="T:HuggingFace.PathBuilder">
            <summary>
            A helper class to build URL paths with optional and required parameters.
            </summary>
        </member>
        <member name="M:HuggingFace.PathBuilder.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:HuggingFace.PathBuilder"/> class.
            </summary>
            <param name="path">The base path for the URL.</param>
            <param name="baseUri">The base URI to prepend to the path, if any.</param>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddRequiredParameter(System.String,System.String)">
            <summary>
            Adds a required parameter to the URL.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddRequiredParameter(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
            <summary>
            Adds a required parameter with multiple values to the URL.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The values of the parameter.</param>
            <param name="delimiter">The delimiter to use between values.</param>
            <param name="explode">Whether to explode the values into separate parameters.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddRequiredParameter``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String,System.Boolean)">
            <summary>
            Adds a required parameter with multiple values to the URL, using a selector function.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
            <param name="name">The name of the parameter.</param>
            <param name="value">The values of the parameter.</param>
            <param name="selector">The function to select the string representation of each value.</param>
            <param name="delimiter">The delimiter to use between values.</param>
            <param name="explode">Whether to explode the values into separate parameters.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddOptionalParameter(System.String,System.String)">
            <summary>
            Adds an optional parameter to the URL.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter, or null if not present.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddOptionalParameter(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
            <summary>
            Adds an optional parameter with multiple values to the URL.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="value">The values of the parameter, or null if not present.</param>
            <param name="delimiter">The delimiter to use between values.</param>
            <param name="explode">Whether to explode the values into separate parameters.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddOptionalParameter``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String,System.Boolean)">
            <summary>
            Adds an optional parameter with multiple values to the URL, using a selector function.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
            <param name="name">The name of the parameter.</param>
            <param name="value">The values of the parameter, or null if not present.</param>
            <param name="selector">The function to select the string representation of each value.</param>
            <param name="delimiter">The delimiter to use between values.</param>
            <param name="explode">Whether to explode the values into separate parameters.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddRequiredParameter``1(System.String,``0,System.String,System.IFormatProvider)">
            <summary>
            Adds a required parameter to the URL, using a formattable value.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter.</param>
            <param name="format">The format string.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.AddOptionalParameter``1(System.String,``0,System.String,System.IFormatProvider)">
            <summary>
            Adds an optional parameter to the URL, using a formattable value.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter, or null if not present.</param>
            <param name="format">The format string.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The current <see cref="T:HuggingFace.PathBuilder"/> instance.</returns>
        </member>
        <member name="M:HuggingFace.PathBuilder.ToString">
            <summary>
            Returns the constructed URL as a string.
            </summary>
            <returns>The constructed URL.</returns>
        </member>
        <member name="T:HuggingFace.EndPointAuthorization">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.EndPointAuthorization.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.EndPointAuthorization.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.EndPointAuthorization.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.EndPointAuthorization.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:HuggingFace.AutoSdkPolyfills">
            <summary>
            
            </summary>
        </member>
        <member name="M:HuggingFace.AutoSdkPolyfills.ReadAsStringAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:HuggingFace.AutoSdkPolyfills.ReadAsStreamAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:HuggingFace.AutoSdkPolyfills.ReadAsByteArrayAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:HuggingFace.JsonConverters.AnyOfJsonConverter`2">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.JsonConverters.AnyOfJsonConverter`2.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.JsonConverters.AnyOfJsonConverter`2.Write(System.Text.Json.Utf8JsonWriter,HuggingFace.AnyOf{`0,`1},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:HuggingFace.JsonConverters.UnixTimestampJsonConverter">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.JsonConverters.UnixTimestampJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:HuggingFace.JsonConverters.UnixTimestampJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:HuggingFace.SourceGenerationContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.Double">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.NullableDouble">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.AnyOfStringIListString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.NullableAnyOfStringIListString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.ErrorResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.GenerateTextRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.GenerateTextRequestOptions">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.GenerateTextRequestParameters">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.GenerateTextResponseValue">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.JsonSerializerContextTypes">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.DictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.DictionaryStringString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.IDictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.IListGenerateTextResponseValue">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.IListString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.JsonElement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.NullableJsonElement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.NullableInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.Object">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:HuggingFace.SourceGenerationContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:HuggingFace.SourceGenerationContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:HuggingFace.SourceGenerationContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:HuggingFace.SourceGenerationContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:HuggingFace.JsonSerializerContextTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.StringStringDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.StringObjectDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.JsonElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type0">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type1">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type2">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type3">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type4">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type5">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type6">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type7">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type8">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type9">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type10">
            <summary>
            
            </summary>
        </member>
        <member name="P:HuggingFace.JsonSerializerContextTypes.Type11">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
            Specifies that null is allowed as an input even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute">
            <summary>
            Indicates that the specified method parameter expects a constant.
            </summary>
            <remarks>
            This can be used to inform tooling that a constant should be used as an argument for the annotated parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute.Min">
            <summary>
            Indicates the minimum bound of the expected constant, inclusive.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute.Max">
            <summary>
            Indicates the maximum bound of the expected constant, inclusive.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
            Specifies that null is disallowed as an input even if the corresponding type allows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
            Applied to a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified parameter value.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable
            by diagnostics if the argument to the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
            Gets the condition parameter value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute">
            <summary>
            Indicates that an API is experimental and it may change in the future.
            </summary>
            <remarks>
            This attribute allows call sites to be flagged with a diagnostic that indicates that an experimental
            feature is used. Authors can use this attribute to ship preview features in their assemblies.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute"/> class,
            specifying the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <param name="diagnosticId">The ID that the compiler will use when reporting a use of the API the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.DiagnosticId">
            <summary>
            Gets the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <value>The unique diagnostic ID.</value>
            <remarks>
            The diagnostic ID is shown in build output for warnings and errors.
            <para>This property represents the unique ID that can be used to suppress the warnings or errors, if needed.</para>
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.UrlFormat">
            <summary>
            Gets or sets the URL for corresponding documentation.
            The API accepts a format string instead of an actual URL, creating a generic URL that includes the diagnostic ID.
            </summary>
            <value>The format string that represents a URL to corresponding documentation.</value>
            <remarks>An example format string is <c>https://contoso.com/obsoletion-warnings/{0}</c>.</remarks>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
            Specifies that an output may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter may be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
            Specifies that an output will not be null even if the corresponding type allows it.
            Specifies that an input argument was not null when the call returns.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
            Specifies that the output will be non-null if the named parameter is non-null.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">The associated parameter name. The output will be non-null if the argument to the parameter specified is non-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
            Gets the associated parameter name.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Index">
            <summary>Represent a type can be used to index a collection either from the start or the end.</summary>
            <remarks>
            Index is used by the C# compiler to support the new index syntax
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 } ;
            int lastElement = someArray[^1]; // lastElement = 5
            </code>
            </remarks>
        </member>
        <member name="M:System.Index.#ctor(System.Int32,System.Boolean)">
            <summary>Construct an Index using a value and indicating if the index is from the start or from the end.</summary>
            <param name="value">The index value. it has to be zero or positive number.</param>
            <param name="fromEnd">Indicating if the index is from the start or from the end.</param>
            <remarks>
            If the Index constructed from the end, index value 1 means pointing at the last element and index value 0 means pointing at beyond last element.
            </remarks>
        </member>
        <member name="P:System.Index.Start">
            <summary>Create an Index pointing at first element.</summary>
        </member>
        <member name="P:System.Index.End">
            <summary>Create an Index pointing at beyond last element.</summary>
        </member>
        <member name="M:System.Index.FromStart(System.Int32)">
            <summary>Create an Index from the start at the position indicated by the value.</summary>
            <param name="value">The index value from the start.</param>
        </member>
        <member name="M:System.Index.FromEnd(System.Int32)">
            <summary>Create an Index from the end at the position indicated by the value.</summary>
            <param name="value">The index value from the end.</param>
        </member>
        <member name="P:System.Index.Value">
            <summary>Returns the index value.</summary>
        </member>
        <member name="P:System.Index.IsFromEnd">
            <summary>Indicates whether the index is from the start or the end.</summary>
        </member>
        <member name="M:System.Index.GetOffset(System.Int32)">
            <summary>Calculate the offset from the start using the giving collection length.</summary>
            <param name="length">The length of the collection that the Index will be used with. length has to be a positive value</param>
            <remarks>
            For performance reason, we don't validate the input length parameter and the returned offset value against negative values.
            we don't validate either the returned offset is greater than the input length.
            It is expected Index will be used with collections which always have non negative length/count. If the returned offset is negative and
            then used to index a collection will get out of range exception which will be same affect as the validation.
            </remarks>
        </member>
        <member name="M:System.Index.Equals(System.Object)">
            <summary>Indicates whether the current Index object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.Equals(System.Index)">
            <summary>Indicates whether the current Index object is equal to another Index object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Index.op_Implicit(System.Int32)~System.Index">
            <summary>Converts integer number to an Index.</summary>
        </member>
        <member name="M:System.Index.ToString">
            <summary>Converts the value of the current Index object to its equivalent string representation.</summary>
        </member>
        <member name="T:System.Range">
            <summary>Represent a range has start and end indexes.</summary>
            <remarks>
            Range is used by the C# compiler to support the range syntax.
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
            int[] subArray1 = someArray[0..2]; // { 1, 2 }
            int[] subArray2 = someArray[1..^0]; // { 2, 3, 4, 5 }
            </code>
            </remarks>
        </member>
        <member name="P:System.Range.Start">
            <summary>Represent the inclusive start index of the Range.</summary>
        </member>
        <member name="P:System.Range.End">
            <summary>Represent the exclusive end index of the Range.</summary>
        </member>
        <member name="M:System.Range.#ctor(System.Index,System.Index)">
            <summary>Construct a Range object using the start and end indexes.</summary>
            <param name="start">Represent the inclusive start index of the range.</param>
            <param name="end">Represent the exclusive end index of the range.</param>
        </member>
        <member name="M:System.Range.Equals(System.Object)">
            <summary>Indicates whether the current Range object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.Equals(System.Range)">
            <summary>Indicates whether the current Range object is equal to another Range object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Range.ToString">
            <summary>Converts the value of the current Range object to its equivalent string representation.</summary>
        </member>
        <member name="M:System.Range.StartAt(System.Index)">
            <summary>Create a Range object starting from start index to the end of the collection.</summary>
        </member>
        <member name="M:System.Range.EndAt(System.Index)">
            <summary>Create a Range object starting from first element in the collection to the end Index.</summary>
        </member>
        <member name="P:System.Range.All">
            <summary>Create a Range object starting from first element to the end.</summary>
        </member>
        <member name="M:System.Range.GetOffsetAndLength(System.Int32)">
            <summary>Calculate the start offset and length of range object using a collection length.</summary>
            <param name="length">The length of the collection that the range will be used with. length has to be a positive value.</param>
            <remarks>
            For performance reason, we don't validate the input length parameter against negative values.
            It is expected Range will be used with collections which always have non negative length/count.
            We validate the range is inside the length scope though.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CollectionBuilderAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initialize the attribute to refer to the <paramref name="methodName"/> method on the <paramref name="builderType"/> type.
            </summary>
            <param name="builderType">The type of the builder to use to construct the collection.</param>
            <param name="methodName">The name of the method on the builder to use to construct the collection.</param>
            <remarks>
            <paramref name="methodName"/> must refer to a static method that accepts a single parameter of
            type <see cref="T:System.ReadOnlySpan`1"/> and returns an instance of the collection being built containing
            a copy of the data from that span.  In future releases of .NET, additional patterns may be supported.
            </remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.BuilderType">
            <summary>
            Gets the type of the builder to use to construct the collection.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.MethodName">
            <summary>
            Gets the name of the method on the builder to use to construct the collection.
            </summary>
            <remarks>
            This should match the metadata name of the target method.
            For example, this might be ".ctor" if targeting the type's constructor.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute">
            <summary>
            Specifies the priority of a member in overload resolution. When unspecified, the default priority is 0.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute"/> class.
            </summary>
            <param name="priority">The priority of the attributed member. Higher numbers are prioritized, lower numbers are deprioritized. 0 is the default if no attribute is present.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.Priority">
            <summary>
            The priority of the member.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ParamCollectionAttribute">
            <summary>
            Indicates that a method will allow a variable number of arguments in its invocation.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiresLocationAttribute">
            <summary>
            Reserved for use by a compiler for tracking metadata.
            This attribute should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
