<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.AI.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Shared.Diagnostics.Throw">
            <summary>
            Defines static methods used to throw exceptions.
            </summary>
            <remarks>
            The main purpose is to reduce code size, improve performance, and standardize exception
            messages.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfNull``1(``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the specified argument is <see langword="null"/>.
            </summary>
            <typeparam name="T">Argument type to be checked for <see langword="null"/>.</typeparam>
            <param name="argument">Object to be checked for <see langword="null"/>.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfNullOrMemberNull``2(``0,``1,System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the specified argument is <see langword="null"/>,
            or <see cref="T:System.ArgumentException" /> if the specified member is <see langword="null"/>.
            </summary>
            <typeparam name="TParameter">Argument type to be checked for <see langword="null"/>.</typeparam>
            <typeparam name="TMember">Member type to be checked for <see langword="null"/>.</typeparam>
            <param name="argument">Argument to be checked for <see langword="null"/>.</param>
            <param name="member">Object member to be checked for <see langword="null"/>.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <param name="memberName">The name of the member.</param>
            <returns>The original value of <paramref name="member"/>.</returns>
            <example>
            <code language="csharp">
            Throws.IfNullOrMemberNull(myObject, myObject?.MyProperty)
            </code>
            </example>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfMemberNull``2(``0,``1,System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException" /> if the specified member is <see langword="null"/>.
            </summary>
            <typeparam name="TParameter">Argument type.</typeparam>
            <typeparam name="TMember">Member type to be checked for <see langword="null"/>.</typeparam>
            <param name="argument">Argument to which member belongs.</param>
            <param name="member">Object member to be checked for <see langword="null"/>.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <param name="memberName">The name of the member.</param>
            <returns>The original value of <paramref name="member"/>.</returns>
            <example>
            <code language="csharp">
            Throws.IfMemberNull(myObject, myObject.MyProperty)
            </code>
            </example>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throws either an <see cref="T:System.ArgumentNullException"/> or an <see cref="T:System.ArgumentException"/>
            if the specified string is <see langword="null"/> or whitespace respectively.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or whitespace.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfNullOrEmpty(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the string is <see langword="null"/>,
            or <see cref="T:System.ArgumentException"/> if it is empty.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or empty.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfBufferTooSmall(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/> if the argument's buffer size is less than the required buffer size.
            </summary>
            <param name="bufferSize">The actual buffer size.</param>
            <param name="requiredSize">The required buffer size.</param>
            <param name="paramName">The name of the parameter to be checked.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfOutOfRange``1(``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the enum value is not valid.
            </summary>
            <param name="argument">The argument to evaluate.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the collection is <see langword="null"/>,
            or <see cref="T:System.ArgumentException"/> if it is empty.
            </summary>
            <param name="argument">The collection to evaluate.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <typeparam name="T">The type of objects in the collection.</typeparam>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentNullException(System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentNullException(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentOutOfRangeException(System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentOutOfRangeException(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentOutOfRangeException(System.String,System.Object,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="actualValue">The value of the argument that caused this exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentException(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.ArgumentException(System.String,System.String,System.Exception)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <remarks>
            If the <paramref name="innerException"/> is not a <see langword="null"/>, the current exception is raised in a catch
            block that handles the inner exception.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.InvalidOperationException(System.String)">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.InvalidOperationException(System.String,System.Exception)">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThan(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThan(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThanOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThanOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfOutOfRange(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfZero(System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThan(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThan(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThanOrEqual(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThanOrEqual(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfOutOfRange(System.UInt32,System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfZero(System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThan(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThan(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThanOrEqual(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThanOrEqual(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfOutOfRange(System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfZero(System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThan(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThan(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThanOrEqual(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThanOrEqual(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfOutOfRange(System.UInt64,System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfZero(System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThan(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThan(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfLessThanOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfGreaterThanOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfOutOfRange(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.Shared.Diagnostics.Throw.IfZero(System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="T:Microsoft.Shared.Collections.Empty">
            <summary>
            Defines static methods used to optimize the use of empty collections.
            </summary>
        </member>
        <member name="M:Microsoft.Shared.Collections.Empty.ReadOnlyCollection``1">
            <summary>
            Returns an optimized empty collection.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <returns>Returns an efficient static instance of an empty collection.</returns>
        </member>
        <member name="M:Microsoft.Shared.Collections.Empty.Enumerable``1">
            <summary>
            Returns an optimized empty collection.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <returns>Returns an efficient static instance of an empty collection.</returns>
        </member>
        <member name="M:Microsoft.Shared.Collections.Empty.ReadOnlyList``1">
            <summary>
            Returns an optimized empty collection.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <returns>Returns an efficient static instance of an empty list.</returns>
        </member>
        <member name="M:Microsoft.Shared.Collections.Empty.ReadOnlyDictionary``2">
            <summary>
            Returns an optimized empty dictionary.
            </summary>
            <typeparam name="TKey">The key type of the dictionary.</typeparam>
            <typeparam name="TValue">The value type of the dictionary.</typeparam>
            <returns>Returns an efficient static instance of an empty dictionary.</returns>
        </member>
        <member name="T:Microsoft.Shared.Collections.EmptyCollectionExtensions">
            <summary>
            Defines static methods used to optimize the use of empty collections.
            </summary>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``1(System.Collections.Generic.IReadOnlyCollection{``0})">
            <summary>
            Returns an optimized empty collection if the input is <see langword="null"/> or empty, otherwise returns the input.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <param name="collection">The collection to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty type if the input collection is <see langword="null"/> or empty, otherwise the collection.</returns>
            <remarks>
            Substituting a static collection whenever an empty collection is needed helps in two ways. First,
            it allows the original empty collection to be garbage collected, freeing memory. Second, the
            empty collection that is returned is optimized to not allocated memory whenever the collection is
            enumerated.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Returns an optimized empty collection if the input is <see langword="null"/> or empty, otherwise returns the input.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <param name="collection">The collection to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty type if the input collection is <see langword="null"/> or empty, otherwise the collection.</returns>
            <remarks>
            Substituting a static collection whenever an empty collection is needed helps in two ways. First,
            it allows the original empty collection to be garbage collected, freeing memory. Second, the
            empty collection that is returned is optimized to not allocated memory whenever the collection is
            enumerated.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``1(System.Collections.Generic.IReadOnlyList{``0})">
            <summary>
            Returns an optimized empty collection if the input is <see langword="null"/> or empty, otherwise returns the input.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <param name="list">The collection to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty type if the input collection is <see langword="null"/> or empty, otherwise the collection.</returns>
            <remarks>
            Substituting a static collection whenever an empty collection is needed helps in two ways. First,
            it allows the original empty collection to be garbage collected, freeing memory. Second, the
            empty collection that is returned is optimized to not allocated memory whenever the collection is
            enumerated.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``1(System.Collections.Generic.IList{``0})">
            <summary>
            Returns an optimized empty list if the input is <see langword="null"/> or empty, otherwise returns the input.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <param name="list">The list to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty type if the input collection is <see langword="null"/> or empty, otherwise the collection.</returns>
            <remarks>
            Substituting a static list whenever an empty collection is needed helps in two ways. First,
            it allows the original empty collection to be garbage collected, freeing memory. Second, the
            empty collection that is returned is optimized to not allocated memory whenever the collection is
            enumerated.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``1(``0[])">
            <summary>
            Returns an optimized empty array if the input is <see langword="null"/> or empty, otherwise returns the input.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="array">The array to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty array if the input array is <see langword="null"/> or empty, otherwise the array.</returns>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an optimized empty collection if the input is <see langword="null"/> or can be determined to be empty, otherwise returns the input.
            </summary>
            <typeparam name="T">The type of the collection.</typeparam>
            <param name="enumerable">The collection to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty type if the input collection is <see langword="null"/> or empty, otherwise the collection.</returns>
            <remarks>
            This method does not enumerate the collection.
            </remarks>
        </member>
        <member name="M:Microsoft.Shared.Collections.EmptyCollectionExtensions.EmptyIfNull``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1})">
            <summary>
            Returns an optimized empty dictionary if the input is <see langword="null"/> or can be determined to be empty, otherwise returns the input.
            </summary>
            <typeparam name="TKey">The key type of the dictionary.</typeparam>
            <typeparam name="TValue">The value type of the dictionary.</typeparam>
            <param name="dictionary">The dictionary to check for <see langword="null"/> or empty.</param>
            <returns>Returns a static instance of an empty type if the input dictionary is <see langword="null"/> or empty, otherwise the dictionary.</returns>
            <remarks>
            Note that this method does not enumerate the dictionary.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary">
            <summary>Provides a dictionary used as the AdditionalProperties dictionary on Microsoft.Extensions.AI objects.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.Clone">
            <summary>Creates a shallow clone of the properties dictionary.</summary>
            <returns>
            A shallow clone of the properties dictionary. The instance will not be the same as the current instance,
            but it will contain all of the same key-value pairs.
            </returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1">
            <summary>Provides a dictionary used as the AdditionalProperties dictionary on Microsoft.Extensions.AI objects.</summary>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="F:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1._dictionary">
            <summary>The underlying dictionary.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Clone">
            <summary>Creates a shallow clone of the properties dictionary.</summary>
            <returns>
            A shallow clone of the properties dictionary. The instance will not be the same as the current instance,
            but it will contain all of the same key-value pairs.
            </returns>
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Values">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IReadOnlyDictionary{System#String,TValue}#Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IReadOnlyDictionary{System#String,TValue}#Values">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Add(System.String,`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.TryAdd(System.String,`0)">
            <summary>Attempts to add the specified key and value to the dictionary.</summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add.</param>
            <returns><see langword="true"/> if the key/value pair was added to the dictionary successfully; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/>.
            </summary>
            <returns>An <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator"/> that enumerates the contents of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,TValue}}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.TryGetValue``1(System.String,``0@)">
            <summary>Attempts to extract a typed value from the dictionary.</summary>
            <typeparam name="T">The type of the value to be retrieved.</typeparam>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, contains the value retrieved from the dictionary, if found and successfully converted to the requested type;
            otherwise, the default value of <typeparamref name="T"/>.
            </param>
            <returns>
            <see langword="true"/> if a non-<see langword="null"/> value was found for <paramref name="key"/>
            in the dictionary and converted to the requested type; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            If a non-<see langword="null"/> value is found for the key in the dictionary, but the value is not of the requested type and is
            an <see cref="T:System.IConvertible"/> object, the method attempts to convert the object to the requested type.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.TryGetValue(System.String,`0@)">
            <summary>Gets the value associated with the specified key.</summary>
            <returns><see langword="true"/> if the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/> contains an element with the specified key; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IDictionary{System#String,TValue}#TryGetValue(System.String,`0@)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IReadOnlyDictionary{System#String,TValue}#TryGetValue(System.String,`0@)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator">
            <summary>Enumerates the elements of an <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1"/>.</summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator._dictionaryEnumerator">
            <summary>The wrapped dictionary enumerator.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.#ctor(System.Collections.Generic.Dictionary{System.String,`0}.Enumerator)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator"/> struct with the dictionary enumerator to wrap.</summary>
            <param name="dictionaryEnumerator">The dictionary enumerator to wrap.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Current">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.System#Collections#IEnumerator#Current">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Reset">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Reset``1(``0@)">
            <summary>Calls <see cref="M:System.Collections.IEnumerator.Reset"/> on an enumerator.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.DebugView">
            <summary>Provides a debugger view for the collection.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.DebugView.#ctor(Microsoft.Extensions.AI.AdditionalPropertiesDictionary{`0})">
            <summary>Provides a debugger view for the collection.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AITool">
            <summary>Represents a tool that can be specified to an AI service.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AITool.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AITool"/> class.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AITool.Name">
            <summary>Gets the name of the tool.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AITool.Description">
            <summary>Gets a description of the tool, suitable for use in describing the purpose to a model.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AITool.AdditionalProperties">
            <summary>Gets any additional properties associated with the tool.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AITool.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Extensions.AI.AITool.DebuggerDisplay">
            <summary>Gets the string to display in the debugger for this instance.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AutoChatToolMode">
            <summary>
            Indicates that an <see cref="T:Microsoft.Extensions.AI.IChatClient"/> is free to select any of the available tools, or none at all.
            </summary>
            <remarks>
            Use <see cref="P:Microsoft.Extensions.AI.ChatToolMode.Auto"/> to get an instance of <see cref="T:Microsoft.Extensions.AI.AutoChatToolMode"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.AutoChatToolMode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AutoChatToolMode"/> class.</summary>
            <remarks>Use <see cref="P:Microsoft.Extensions.AI.ChatToolMode.Auto"/> to get an instance of <see cref="T:Microsoft.Extensions.AI.AutoChatToolMode"/>.</remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.AutoChatToolMode.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.AutoChatToolMode.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatClientExtensions">
            <summary>Provides a collection of static methods for extending <see cref="T:Microsoft.Extensions.AI.IChatClient"/> instances.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetService``1(Microsoft.Extensions.AI.IChatClient,System.Object)">
            <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient"/> for an object of type <typeparamref name="TService"/>.</summary>
            <typeparam name="TService">The type of the object to be retrieved.</typeparam>
            <param name="client">The client.</param>
            <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
            <returns>The found object, otherwise <see langword="null"/>.</returns>
            <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that may be provided by the <see cref="T:Microsoft.Extensions.AI.IChatClient"/>,
            including itself or any services it might be wrapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync(Microsoft.Extensions.AI.IChatClient,System.String,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <summary>Sends a user chat text message and returns the response messages.</summary>
            <param name="client">The chat client.</param>
            <param name="chatMessage">The text content for the chat message to send.</param>
            <param name="options">The chat options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The response messages generated by the client.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <summary>Sends a chat message and returns the response messages.</summary>
            <param name="client">The chat client.</param>
            <param name="chatMessage">The chat message to send.</param>
            <param name="options">The chat options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The response messages generated by the client.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync(Microsoft.Extensions.AI.IChatClient,System.String,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <summary>Sends a user chat text message and streams the response messages.</summary>
            <param name="client">The chat client.</param>
            <param name="chatMessage">The text content for the chat message to send.</param>
            <param name="options">The chat options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The response messages generated by the client.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <summary>Sends a chat message and streams the response messages.</summary>
            <param name="client">The chat client.</param>
            <param name="chatMessage">The chat message to send.</param>
            <param name="options">The chat options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The response messages generated by the client.</returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatClientMetadata">
            <summary>Provides metadata about an <see cref="T:Microsoft.Extensions.AI.IChatClient"/>.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatClientMetadata.#ctor(System.String,System.Uri,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatClientMetadata"/> class.</summary>
            <param name="providerName">
            The name of the chat provider, if applicable. Where possible, this should map to the
            appropriate name defined in the OpenTelemetry Semantic Conventions for Generative AI systems.
            </param>
            <param name="providerUri">The URL for accessing the chat provider, if applicable.</param>
            <param name="modelId">The ID of the chat model used, if applicable.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatClientMetadata.ProviderName">
            <summary>Gets the name of the chat provider.</summary>
            <remarks>
            Where possible, this maps to the appropriate name defined in the
            OpenTelemetry Semantic Conventions for Generative AI systems.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatClientMetadata.ProviderUri">
            <summary>Gets the URL for accessing the chat provider.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatClientMetadata.ModelId">
            <summary>Gets the ID of the model used by this chat provider.</summary>
            <remarks>
            This value can be null if either the name is unknown or there are multiple possible models associated with this instance.
            An individual request may override this value via <see cref="P:Microsoft.Extensions.AI.ChatOptions.ModelId"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatFinishReason">
            <summary>Represents the reason a chat response completed.</summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.ChatFinishReason._value">
            <summary>The finish reason value. If null because `default(ChatFinishReason)` was used, the instance will behave like <see cref="P:Microsoft.Extensions.AI.ChatFinishReason.Stop"/>.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatFinishReason"/> struct with a string that describes the reason.</summary>
            <param name="value">The reason value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is empty or composed entirely of whitespace.</exception>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatFinishReason.Value">
            <summary>Gets the finish reason value.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Equals(Microsoft.Extensions.AI.ChatFinishReason)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.op_Equality(Microsoft.Extensions.AI.ChatFinishReason,Microsoft.Extensions.AI.ChatFinishReason)">
            <summary>
            Compares two instances.
            </summary>
            <param name="left">The left argument of the comparison.</param>
            <param name="right">The right argument of the comparison.</param>
            <returns><see langword="true" /> if the two instances are equal; <see langword="false" /> if they aren't equal.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.op_Inequality(Microsoft.Extensions.AI.ChatFinishReason,Microsoft.Extensions.AI.ChatFinishReason)">
            <summary>
            Compares two instances.
            </summary>
            <param name="left">The left argument of the comparison.</param>
            <param name="right">The right argument of the comparison.</param>
            <returns><see langword="true" /> if the two instances aren't equal; <see langword="false" /> if they are equal.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.ToString">
            <summary>Gets the <see cref="P:Microsoft.Extensions.AI.ChatFinishReason.Value"/> of the finish reason.</summary>
            <returns>The <see cref="P:Microsoft.Extensions.AI.ChatFinishReason.Value"/> of the finish reason.</returns>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatFinishReason.Stop">
            <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason"/> representing the model encountering a natural stop point or provided stop sequence.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatFinishReason.Length">
            <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason"/> representing the model reaching the maximum length allowed for the request and/or response (typically in terms of tokens).</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatFinishReason.ToolCalls">
            <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason"/> representing the model requesting the use of a tool that was defined in the request.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatFinishReason.ContentFilter">
            <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason"/> representing the model filtering content, whether for safety, prohibited content, sensitive content, or other such issues.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatFinishReason.Converter">
            <summary>Provides a <see cref="T:System.Text.Json.Serialization.JsonConverter`1"/> for serializing <see cref="T:Microsoft.Extensions.AI.ChatFinishReason"/> instances.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Converter.Write(System.Text.Json.Utf8JsonWriter,Microsoft.Extensions.AI.ChatFinishReason,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatMessage">
            <summary>Represents a chat message used by an <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatMessage.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatMessage.#ctor(Microsoft.Extensions.AI.ChatRole,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> class.</summary>
            <param name="role">The role of the author of the message.</param>
            <param name="content">The contents of the message.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatMessage.#ctor(Microsoft.Extensions.AI.ChatRole,System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> class.</summary>
            <param name="role">The role of the author of the message.</param>
            <param name="contents">The contents for this message.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatMessage.Clone">
            <summary>Clones the <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> to a new <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> instance.</summary>
            <returns>A shallow clone of the original message object.</returns>
            <remarks>
            This is a shallow clone. The returned instance is different from the original, but all properties
            refer to the same objects as the original.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatMessage.AuthorName">
            <summary>Gets or sets the name of the author of the message.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatMessage.Role">
            <summary>Gets or sets the role of the author of the message.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatMessage.Text">
            <summary>
            Gets or sets the text of the first <see cref="T:Microsoft.Extensions.AI.TextContent"/> instance in <see cref="P:Microsoft.Extensions.AI.ChatMessage.Contents" />.
            </summary>
            <remarks>
            If there is no <see cref="T:Microsoft.Extensions.AI.TextContent"/> instance in <see cref="P:Microsoft.Extensions.AI.ChatMessage.Contents" />, then the getter returns <see langword="null" />,
            and the setter adds a new <see cref="T:Microsoft.Extensions.AI.TextContent"/> instance with the provided value.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatMessage.Contents">
            <summary>Gets or sets the chat message content items.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatMessage.RawRepresentation">
            <summary>Gets or sets the raw representation of the chat message from an underlying implementation.</summary>
            <remarks>
            If a <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatMessage.AdditionalProperties">
            <summary>Gets or sets any additional properties associated with the message.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatMessage.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatOptions">
            <summary>Represents the options for a chat request.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.ChatThreadId">
            <summary>Gets or sets an optional identifier used to associate a request with an existing chat thread.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.Temperature">
            <summary>Gets or sets the temperature for generating chat responses.</summary>
            <remarks>
            This value controls the randomness of predictions made by the model. Use a lower value to decrease randomness in the response.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.MaxOutputTokens">
            <summary>Gets or sets the maximum number of tokens in the generated chat response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.TopP">
            <summary>Gets or sets the "nucleus sampling" factor (or "top p") for generating chat responses.</summary>
            <remarks>
            Nucleus sampling is an alternative to sampling with temperature where the model
            considers the results of the tokens with <see cref="P:Microsoft.Extensions.AI.ChatOptions.TopP"/> probability mass.
            For example, 0.1 means only the tokens comprising the top 10% probability mass are considered.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.TopK">
            <summary>
            Gets or sets the number of most probable tokens that the model considers when generating the next part of the text.
            </summary>
            <remarks>
            This property reduces the probability of generating nonsense. A higher value gives more diverse answers, while a lower value is more conservative.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.FrequencyPenalty">
            <summary>
            Gets or sets the penalty for repeated tokens in chat responses proportional to how many times they've appeared.
            </summary>
            <remarks>
            You can modify this value to reduce the repetitiveness of generated tokens. The higher the value, the stronger a penalty
            is applied to previously present tokens, proportional to how many times they've already appeared in the prompt or prior generation.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.PresencePenalty">
            <summary>
            Gets or sets a value that influences the probability of generated tokens appearing based on their existing presence in generated text.
            </summary>
            <remarks>
            You can modify this value to reduce repetitiveness of generated tokens. Similar to <see cref="P:Microsoft.Extensions.AI.ChatOptions.FrequencyPenalty"/>,
            except that this penalty is applied equally to all tokens that have already appeared, regardless of their exact frequencies.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.Seed">
            <summary>Gets or sets a seed value used by a service to control the reproducibility of results.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.ResponseFormat">
            <summary>
            Gets or sets the response format for the chat request.
            </summary>
            <remarks>
            If null, no response format is specified and the client will use its default.
            This property can be set to <see cref="P:Microsoft.Extensions.AI.ChatResponseFormat.Text"/> to specify that the response should be unstructured text,
            to <see cref="P:Microsoft.Extensions.AI.ChatResponseFormat.Json"/> to specify that the response should be structured JSON data, or
            an instance of <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson"/> constructed with a specific JSON schema to request that the
            response be structured JSON data according to that schema. It is up to the client implementation if or how
            to honor the request. If the client implementation doesn't recognize the specific kind of <see cref="T:Microsoft.Extensions.AI.ChatResponseFormat"/>,
            it can be ignored.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.ModelId">
            <summary>Gets or sets the model ID for the chat request.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.StopSequences">
            <summary>
            Gets or sets the list of stop sequences.
            </summary>
            <remarks>
            After a stop sequence is detected, the model stops generating further tokens for chat responses.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.ToolMode">
            <summary>Gets or sets the tool mode for the chat request.</summary>
            <remarks>The default value is <see langword="null"/>, which is treated the same as <see cref="P:Microsoft.Extensions.AI.ChatToolMode.Auto"/>.</remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.Tools">
            <summary>Gets or sets the list of tools to include with a chat request.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatOptions.AdditionalProperties">
            <summary>Gets or sets any additional properties associated with the options.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatOptions.Clone">
            <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.ChatOptions"/> instance.</summary>
            <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.ChatOptions"/> instance.</returns>
            <remarks>
            The clone will have the same values for all properties as the original instance. Any collections, like <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools"/>,
            <see cref="P:Microsoft.Extensions.AI.ChatOptions.StopSequences"/>, and <see cref="P:Microsoft.Extensions.AI.ChatOptions.AdditionalProperties"/>, are shallow-cloned, meaning a new collection instance is created,
            but any references contained by the collections are shared with the original.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatResponse">
            <summary>Represents the response to a chat request.</summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.ChatResponse._choices">
            <summary>The list of choices in the response.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponse.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> class.</summary>
            <param name="choices">The list of choices in the response, one message per choice.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponse.#ctor(Microsoft.Extensions.AI.ChatMessage)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> class.</summary>
            <param name="message">The chat message representing the singular choice in the response.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.Choices">
            <summary>Gets or sets the list of chat response choices.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.Message">
            <summary>Gets the chat response message.</summary>
            <remarks>
            If there are multiple choices, this property returns the first choice.
            If <see cref="P:Microsoft.Extensions.AI.ChatResponse.Choices"/> is empty, this property will throw. Use <see cref="P:Microsoft.Extensions.AI.ChatResponse.Choices"/> to access all choices directly.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.ResponseId">
            <summary>Gets or sets the ID of the chat response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.ChatThreadId">
            <summary>Gets or sets the chat thread ID associated with this chat response.</summary>
            <remarks>
            Some <see cref="T:Microsoft.Extensions.AI.IChatClient"/> implementations are capable of storing the state for a chat thread, such that
            the input messages supplied to <see cref="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)"/> need only be the additional messages beyond
            what's already stored. If this property is non-<see langword="null"/>, it represents an identifier for that state,
            and it should be used in a subsequent <see cref="P:Microsoft.Extensions.AI.ChatOptions.ChatThreadId"/> instead of supplying the same messages
            (and this <see cref="T:Microsoft.Extensions.AI.ChatResponse"/>'s message) as part of the <c>chatMessages</c> parameter.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.ModelId">
            <summary>Gets or sets the model ID used in the creation of the chat response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.CreatedAt">
            <summary>Gets or sets a timestamp for the chat response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.FinishReason">
            <summary>Gets or sets the reason for the chat response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.Usage">
            <summary>Gets or sets usage details for the chat response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.RawRepresentation">
            <summary>Gets or sets the raw representation of the chat response from an underlying implementation.</summary>
            <remarks>
            If a <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponse.AdditionalProperties">
            <summary>Gets or sets any additional properties associated with the chat response.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponse.ToString">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponse.ToChatResponseUpdates">
            <summary>Creates an array of <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances that represent this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
            <returns>An array of <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances that may be used to represent this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatResponseFormat">
            <summary>Represents the response format that is desired by the caller.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseFormat.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseFormat"/> class.</summary>
            <remarks>Prevents external instantiation. Close the inheritance hierarchy for now until we have good reason to open it.</remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseFormat.Text">
            <summary>Gets a singleton instance representing unstructured textual data.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseFormat.Json">
            <summary>Gets a singleton instance representing structured JSON data but without any particular schema.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseFormat.ForJsonSchema(System.Text.Json.JsonElement,System.String,System.String)">
            <summary>Creates a <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson"/> representing structured JSON data with the specified schema.</summary>
            <param name="schema">The JSON schema.</param>
            <param name="schemaName">An optional name of the schema. For example, if the schema represents a particular class, this could be the name of the class.</param>
            <param name="schemaDescription">An optional description of the schema.</param>
            <returns>The <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson"/> instance.</returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatResponseFormatJson">
            <summary>Represents a response format for structured JSON data.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseFormatJson.#ctor(System.Nullable{System.Text.Json.JsonElement},System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson"/> class with the specified schema.</summary>
            <param name="schema">The schema to associate with the JSON response.</param>
            <param name="schemaName">A name for the schema.</param>
            <param name="schemaDescription">A description of the schema.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.Schema">
            <summary>Gets the JSON schema associated with the response, or null if there is none.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.SchemaName">
            <summary>Gets a name for the schema.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.SchemaDescription">
            <summary>Gets a description of the schema.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatResponseFormatText">
            <summary>Represents a response format with no constraints around the format.</summary>
            <remarks>
            Use <see cref="P:Microsoft.Extensions.AI.ChatResponseFormat.Text"/> to get an instance of <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatText"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseFormatText.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatText"/> class.</summary>
            <remarks> Use <see cref="P:Microsoft.Extensions.AI.ChatResponseFormat.Text"/> to get an instance of <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatText"/>.</remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseFormatText.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseFormatText.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatResponseUpdate">
            <summary>
            Represents a single streaming response chunk from an <see cref="T:Microsoft.Extensions.AI.IChatClient"/>.
            </summary>
            <remarks>
            <para>
            <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/> is so named because it represents updates
            that layer on each other to form a single chat response. Conceptually, this combines the roles of
            <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> and <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> in streaming output. For ease of consumption,
            it also flattens the nested structure you see on streaming chunks in some AI services, so instead of a
            dictionary of choices, each update is part of a single choice (and hence has its own role, choice ID, etc.).
            </para>
            <para>
            The relationship between <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> and <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/> is
            codified in the <see cref="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ToChatResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Boolean,System.Threading.CancellationToken)"/> and
            <see cref="M:Microsoft.Extensions.AI.ChatResponse.ToChatResponseUpdates"/>, which enable bidirectional conversions
            between the two. Note, however, that the provided conversions may be lossy, for example if multiple
            updates all have different <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.RawRepresentation"/> objects whereas there's only one slot for
            such an object available in <see cref="P:Microsoft.Extensions.AI.ChatResponse.RawRepresentation"/>. Similarly, if different
            updates that are part of the same choice provide different values for properties like <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.ModelId"/>,
            only one of the values will be used to populate <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId"/>.
            </para>
            </remarks>
        </member>
        <member name="F:Microsoft.Extensions.AI.ChatResponseUpdate._contents">
            <summary>The response update content items.</summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.ChatResponseUpdate._authorName">
            <summary>The name of the author of the update.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.AuthorName">
            <summary>Gets or sets the name of the author of the response update.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.Role">
            <summary>Gets or sets the role of the author of the response update.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.Text">
            <summary>
            Gets or sets the text of the first <see cref="T:Microsoft.Extensions.AI.TextContent"/> instance in <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents" />.
            </summary>
            <remarks>
            If there is no <see cref="T:Microsoft.Extensions.AI.TextContent"/> instance in <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents" />, then the getter returns <see langword="null" />,
            and the setter will add new <see cref="T:Microsoft.Extensions.AI.TextContent"/> instance with the provided value.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents">
            <summary>Gets or sets the chat response update content items.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.RawRepresentation">
            <summary>Gets or sets the raw representation of the response update from an underlying implementation.</summary>
            <remarks>
            If a <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.AdditionalProperties">
            <summary>Gets or sets additional properties for the update.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ResponseId">
            <summary>Gets or sets the ID of the response of which this update is a part.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ChatThreadId">
            <summary>Gets or sets the chat thread ID associated with the chat response of which this update is a part.</summary>
            <remarks>
            Some <see cref="T:Microsoft.Extensions.AI.IChatClient"/> implementations are capable of storing the state for a chat thread, such that
            the input messages supplied to <see cref="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)"/> need only be the additional messages beyond
            what's already stored. If this property is non-<see langword="null"/>, it represents an identifier for that state,
            and it should be used in a subsequent <see cref="P:Microsoft.Extensions.AI.ChatOptions.ChatThreadId"/> instead of supplying the same messages
            (and this streaming message) as part of the <c>chatMessages</c> parameter.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.CreatedAt">
            <summary>Gets or sets a timestamp for the response update.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ChoiceIndex">
            <summary>Gets or sets the zero-based index of the choice with which this update is associated in the streaming sequence.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.FinishReason">
            <summary>Gets or sets the finish reason for the operation.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ModelId">
            <summary>Gets or sets the model ID associated with this response update.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseUpdate.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatResponseUpdateExtensions">
            <summary>
            Provides extension methods for working with <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ToChatResponse(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Boolean)">
            <summary>Combines <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/> instances into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse"/>.</summary>
            <param name="updates">The updates to be combined.</param>
            <param name="coalesceContent">
            <see langword="true"/> to attempt to coalesce contiguous <see cref="T:Microsoft.Extensions.AI.AIContent"/> items, where applicable,
            into a single <see cref="T:Microsoft.Extensions.AI.AIContent"/>, in order to reduce the number of individual content items that are included in
            the manufactured <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> instances. When <see langword="false"/>, the original content items are used.
            The default is <see langword="true"/>.
            </param>
            <returns>The combined <see cref="T:Microsoft.Extensions.AI.ChatResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ToChatResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Boolean,System.Threading.CancellationToken)">
            <summary>Combines <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/> instances into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse"/>.</summary>
            <param name="updates">The updates to be combined.</param>
            <param name="coalesceContent">
            <see langword="true"/> to attempt to coalesce contiguous <see cref="T:Microsoft.Extensions.AI.AIContent"/> items, where applicable,
            into a single <see cref="T:Microsoft.Extensions.AI.AIContent"/>, in order to reduce the number of individual content items that are included in
            the manufactured <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> instances. When <see langword="false"/>, the original content items are used.
            The default is <see langword="true"/>.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The combined <see cref="T:Microsoft.Extensions.AI.ChatResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ProcessUpdate(Microsoft.Extensions.AI.ChatResponseUpdate,System.Collections.Generic.Dictionary{System.Int32,Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse)">
            <summary>Processes the <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate"/>, incorporating its contents into <paramref name="messages"/> and <paramref name="response"/>.</summary>
            <param name="update">The update to process.</param>
            <param name="messages">The dictionary mapping <see cref="P:Microsoft.Extensions.AI.ChatResponseUpdate.ChoiceIndex"/> to the <see cref="T:Microsoft.Extensions.AI.ChatMessage"/> being built for that choice.</param>
            <param name="response">The <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> object whose properties should be updated based on <paramref name="update"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.AddMessagesToResponse(System.Collections.Generic.Dictionary{System.Int32,Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Boolean)">
            <summary>Finalizes the <paramref name="response"/> object by transferring the <paramref name="messages"/> into it.</summary>
            <param name="messages">The messages to process further and transfer into <paramref name="response"/>.</param>
            <param name="response">The result <see cref="T:Microsoft.Extensions.AI.ChatResponse"/> being built.</param>
            <param name="coalesceContent">The corresponding option value provided to <see cref="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ToChatResponse(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Boolean)"/> or <see cref="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.ToChatResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Boolean,System.Threading.CancellationToken)"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatResponseUpdateExtensions.CoalesceTextContent(System.Collections.Generic.List{Microsoft.Extensions.AI.AIContent})">
            <summary>Coalesces sequential <see cref="T:Microsoft.Extensions.AI.TextContent"/> content elements.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatRole">
            <summary>
            Describes the intended purpose of a message within a chat interaction.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatRole.System">
            <summary>Gets the role that instructs or sets the behavior of the system.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatRole.Assistant">
            <summary>Gets the role that provides responses to system-instructed, user-prompted input.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatRole.User">
            <summary>Gets the role that provides user input for chat interactions.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatRole.Tool">
            <summary>Gets the role that provides additional information and references in response to tool use requests.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatRole.Value">
            <summary>
            Gets the value associated with this <see cref="T:Microsoft.Extensions.AI.ChatRole"/>.
            </summary>
            <remarks>
            The value will be serialized into the "role" message field of the Chat Message format.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatRole"/> struct with the provided value.
            </summary>
            <param name="value">The value to associate with this <see cref="T:Microsoft.Extensions.AI.ChatRole"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.op_Equality(Microsoft.Extensions.AI.ChatRole,Microsoft.Extensions.AI.ChatRole)">
            <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instances are equivalent, as determined by a
            case-insensitive comparison of their values.
            </summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instance to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instance to compare.</param>
            <returns><see langword="true"/> if left and right are both null or have equivalent values; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.op_Inequality(Microsoft.Extensions.AI.ChatRole,Microsoft.Extensions.AI.ChatRole)">
            <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instances are not equivalent, as determined by a
            case-insensitive comparison of their values.
            </summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instance to compare. </param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instance to compare. </param>
            <returns><see langword="true"/> if left and right have different values; <see langword="false"/> if they have equivalent values or are both null.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.Equals(Microsoft.Extensions.AI.ChatRole)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatRole.Converter">
            <summary>Provides a <see cref="T:System.Text.Json.Serialization.JsonConverter`1"/> for serializing <see cref="T:Microsoft.Extensions.AI.ChatRole"/> instances.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatRole.Converter.Write(System.Text.Json.Utf8JsonWriter,Microsoft.Extensions.AI.ChatRole,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.AI.ChatToolMode">
            <summary>
            Describes how tools should be selected by a <see cref="T:Microsoft.Extensions.AI.IChatClient"/>.
            </summary>
            <remarks>
            The predefined values <see cref="P:Microsoft.Extensions.AI.ChatToolMode.Auto" />, <see cref="P:Microsoft.Extensions.AI.ChatToolMode.None"/>, and <see cref="P:Microsoft.Extensions.AI.ChatToolMode.RequireAny"/> are provided.
            To nominate a specific function, use <see cref="M:Microsoft.Extensions.AI.ChatToolMode.RequireSpecific(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatToolMode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatToolMode"/> class.</summary>
            <remarks>Prevents external instantiation. Close the inheritance hierarchy for now until we have good reason to open it.</remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatToolMode.Auto">
            <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.ChatToolMode"/> indicating that tool usage is optional.
            </summary>
            <remarks>
            <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools"/> can contain zero or more <see cref="T:Microsoft.Extensions.AI.AITool"/>
            instances, and the <see cref="T:Microsoft.Extensions.AI.IChatClient"/> is free to invoke zero or more of them.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatToolMode.None">
            <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.ChatToolMode"/> indicating that tool usage is unsupported.
            </summary>
            <remarks>
            <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools"/> can contain zero or more <see cref="T:Microsoft.Extensions.AI.AITool"/>
            instances, but the <see cref="T:Microsoft.Extensions.AI.IChatClient"/> should not request the invocation of
            any of them. This can be used when the <see cref="T:Microsoft.Extensions.AI.IChatClient"/> should know about
            tools in order to provide information about them or plan out their usage, but should
            not request the invocation of any of them.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.ChatToolMode.RequireAny">
            <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.ChatToolMode"/> indicating that tool usage is required,
            but that any tool can be selected. At least one tool must be provided in <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.ChatToolMode.RequireSpecific(System.String)">
            <summary>
            Instantiates a <see cref="T:Microsoft.Extensions.AI.ChatToolMode"/> indicating that tool usage is required,
            and that the specified <see cref="T:Microsoft.Extensions.AI.AIFunction"/> must be selected. The function name
            must match an entry in <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools"/>.
            </summary>
            <param name="functionName">The name of the required function.</param>
            <returns>An instance of <see cref="T:Microsoft.Extensions.AI.RequiredChatToolMode"/> for the specified function name.</returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.DelegatingChatClient">
            <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.IChatClient"/> that passes through calls to another instance.
            </summary>
            <remarks>
            This is recommended as a base type when building clients that can be chained in any order around an underlying <see cref="T:Microsoft.Extensions.AI.IChatClient"/>.
            The default implementation simply passes each call to the inner client instance.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.#ctor(Microsoft.Extensions.AI.IChatClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingChatClient"/> class.
            </summary>
            <param name="innerClient">The wrapped client instance.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.Dispose">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.DelegatingChatClient.InnerClient">
            <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.GetService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.Dispose(System.Boolean)">
            <summary>Provides a mechanism for releasing unmanaged resources.</summary>
            <param name="disposing"><see langword="true"/> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingChatClient.Dispose"/>; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="T:Microsoft.Extensions.AI.IChatClient">
            <summary>Represents a chat client.</summary>
            <remarks>
            <para>
            Unless otherwise specified, all members of <see cref="T:Microsoft.Extensions.AI.IChatClient"/> are thread-safe for concurrent use.
            It is expected that all implementations of <see cref="T:Microsoft.Extensions.AI.IChatClient"/> support being used by multiple requests concurrently.
            </para>
            <para>
            However, implementations of <see cref="T:Microsoft.Extensions.AI.IChatClient"/> might mutate the arguments supplied to <see cref="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)"/> and
            <see cref="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)"/>, such as by adding additional messages to the messages list or configuring the options
            instance. Thus, consumers of the interface either should avoid using shared instances of these arguments for concurrent
            invocations or should otherwise ensure by construction that no <see cref="T:Microsoft.Extensions.AI.IChatClient"/> instances are used which might employ
            such mutation. For example, the WithChatOptions method be provided with a callback that could mutate the supplied options
            argument, and that should be avoided if using a singleton options instance.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <summary>Sends chat messages and returns the response.</summary>
            <param name="chatMessages">The chat content to send.</param>
            <param name="options">The chat options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The response messages generated by the client.</returns>
            <remarks>
            The returned messages aren't added to <paramref name="chatMessages"/>. However, any intermediate messages generated implicitly
            by the client, including any messages for roundtrips to the model as part of the implementation of this request, are included.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
            <summary>Sends chat messages and streams the response.</summary>
            <param name="chatMessages">The chat content to send.</param>
            <param name="options">The chat options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The response messages generated by the client.</returns>
            <remarks>
            The returned messages aren't added to <paramref name="chatMessages"/>. However, any intermediate messages generated implicitly
            by the client, including any messages for roundtrips to the model as part of the implementation of this request, are included.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.IChatClient.GetService(System.Type,System.Object)">
            <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient"/> for an object of the specified type <paramref name="serviceType"/>.</summary>
            <param name="serviceType">The type of object being requested.</param>
            <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
            <returns>The found object, otherwise <see langword="null"/>.</returns>
            <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that might be provided by the <see cref="T:Microsoft.Extensions.AI.IChatClient"/>,
            including itself or any services it might be wrapping.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.NoneChatToolMode">
            <summary>
            Indicates that an <see cref="T:Microsoft.Extensions.AI.IChatClient"/> should not request the invocation of any tools.
            </summary>
            <remarks>
            Use <see cref="P:Microsoft.Extensions.AI.ChatToolMode.None"/> to get an instance of <see cref="T:Microsoft.Extensions.AI.NoneChatToolMode"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.NoneChatToolMode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.NoneChatToolMode"/> class.</summary>
            <remarks>Use <see cref="P:Microsoft.Extensions.AI.ChatToolMode.None"/> to get an instance of <see cref="T:Microsoft.Extensions.AI.NoneChatToolMode"/>.</remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.NoneChatToolMode.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.NoneChatToolMode.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.RequiredChatToolMode">
            <summary>
            Represents a mode where a chat tool must be called. This class can optionally nominate a specific function
            or indicate that any of the functions can be selected.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.RequiredChatToolMode.RequiredFunctionName">
            <summary>
            Gets the name of a specific <see cref="T:Microsoft.Extensions.AI.AIFunction"/> that must be called.
            </summary>
            <remarks>
            If the value is <see langword="null"/>, any available function can be selected (but at least one must be).
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.RequiredChatToolMode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.RequiredChatToolMode"/> class that requires a specific function to be called.
            </summary>
            <param name="requiredFunctionName">The name of the function that must be called.</param>
            <remarks>
            <paramref name="requiredFunctionName"/> can be <see langword="null"/>. However, it's preferable to use
            <see cref="P:Microsoft.Extensions.AI.ChatToolMode.RequireAny"/> when any function can be selected.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.RequiredChatToolMode.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.RequiredChatToolMode.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.RequiredChatToolMode.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.CodeInterpreterTool">
            <summary>Represents a tool that can be specified to an AI service to enable it to execute code it generates.</summary>
            <remarks>
            This tool does not itself implement code interpration. It is a marker that can be used to inform a service
            that the service is allowed to execute its generated code if the service is capable of doing so.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.CodeInterpreterTool.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.CodeInterpreterTool"/> class.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AIContent">
            <summary>Provides a base class for all content used with AI services.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIContent"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIContent.RawRepresentation">
            <summary>Gets or sets the raw representation of the content from an underlying implementation.</summary>
            <remarks>
            If an <see cref="T:Microsoft.Extensions.AI.AIContent"/> is created to represent some underlying object from another object
            model, this property can be used to store that original object. This can be useful for debugging or
            for enabling a consumer to access the underlying object model if needed.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIContent.AdditionalProperties">
            <summary>Gets or sets additional properties for the content.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AIContentExtensions">
            <summary>Internal extensions for working with <see cref="T:Microsoft.Extensions.AI.AIContent"/>.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIContentExtensions.FindFirst``1(System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
            <summary>Finds the first occurrence of a <typeparamref name="T"/> in the list.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIContentExtensions.ConcatText(System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
            <summary>Concatenates the text of all <see cref="T:Microsoft.Extensions.AI.TextContent"/> instances in the list.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.DataContent">
            <summary>
            Represents data content, such as an image or audio.
            </summary>
            <remarks>
            <para>
            The represented content may either be the actual bytes stored in this instance, or it may
            be a URI that references the location of the content.
            </para>
            <para>
            <see cref="P:Microsoft.Extensions.AI.DataContent.Uri"/> always returns a valid URI string, even if the instance was constructed from
            a <see cref="T:System.ReadOnlyMemory`1"/>. In that case, a data URI will be constructed and returned.
            </para>
            </remarks>
        </member>
        <member name="F:Microsoft.Extensions.AI.DataContent._uri">
            <summary>The string-based representation of the URI, including any data in the instance.</summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.DataContent._data">
            <summary>The data, lazily initialized if the data is provided in a data URI.</summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.DataContent._dataUri">
            <summary>Parsed data URI information.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataContent.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent"/> class.
            </summary>
            <param name="uri">The URI of the content. This can be a data URI.</param>
            <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataContent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent"/> class.
            </summary>
            <param name="uri">The URI of the content. This can be a data URI.</param>
            <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataContent.#ctor(System.ReadOnlyMemory{System.Byte},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent"/> class.
            </summary>
            <param name="data">The byte contents.</param>
            <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataContent.MediaTypeStartsWith(System.String)">
            <summary>
            Determines whether the <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType"/> has the specified prefix.
            </summary>
            <param name="prefix">The media type prefix.</param>
            <returns><see langword="true"/> if the <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType"/> has the specified prefix, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataContent.ValidateMediaType(System.String@)">
            <summary>Sets <paramref name="mediaType"/> to null if it's empty or composed entirely of whitespace.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.DataContent.Uri">
            <summary>Gets the URI for this <see cref="T:Microsoft.Extensions.AI.DataContent"/>.</summary>
            <remarks>
            The returned URI is always a valid URI string, even if the instance was constructed from a <see cref="T:System.ReadOnlyMemory`1"/>
            or from a <see cref="T:System.Uri"/>. In the case of a <see cref="T:System.ReadOnlyMemory`1"/>, this property returns a data URI containing
            that data.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.DataContent.MediaType">
            <summary>Gets the media type (also known as MIME type) of the content.</summary>
            <remarks>
            If the media type was explicitly specified, this property returns that value.
            If the media type was not explicitly specified, but a data URI was supplied and that data URI contained a non-default
            media type, that media type is returned.
            Otherwise, this property returns null.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.DataContent.Data">
            <summary>Gets the data represented by this instance.</summary>
            <remarks>
            If the instance was constructed from a <see cref="T:System.ReadOnlyMemory`1"/>, this property returns that data.
            If the instance was constructed from a data URI, this property the data contained within the data URI.
            If, however, the instance was constructed from another form of URI, one that simply references where the
            data can be found but doesn't actually contain the data, this property returns <see langword="null"/>;
            no attempt is made to retrieve the data from that URI.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.DataContent.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.DataUriParser">
            <summary>
            Minimal data URI parser based on RFC 2397: https://datatracker.ietf.org/doc/html/rfc2397.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataUriParser.IsValidMediaType(System.ReadOnlySpan{System.Char},System.String@)">
            <summary>Validates that a media type is valid, and if successful, ensures we have it as a string.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataUriParser.IsValidBase64Data(System.ReadOnlySpan{System.Char})">
            <summary>Test whether the value is a base64 string without whitespace.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.DataUriParser.DataUri">
            <summary>Provides the parts of a parsed data URI.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.DataUriParser.DataUri.#ctor(System.ReadOnlyMemory{System.Char},System.Boolean,System.String)">
            <summary>Provides the parts of a parsed data URI.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.FunctionCallContent">
            <summary>
            Represents a function call request.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.FunctionCallContent.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionCallContent"/> class.
            </summary>
            <param name="callId">The function call ID.</param>
            <param name="name">The function name.</param>
            <param name="arguments">The function original arguments.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionCallContent.CallId">
            <summary>
            Gets the function call ID.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionCallContent.Name">
            <summary>
            Gets the name of the function requested.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionCallContent.Arguments">
            <summary>
            Gets or sets the arguments requested to be provided to the function.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionCallContent.Exception">
            <summary>
            Gets or sets any exception that occurred while mapping the original function call data to this class.
            </summary>
            <remarks>
            This property is for information purposes only. The <see cref="P:Microsoft.Extensions.AI.FunctionCallContent.Exception"/> is not serialized as part of serializing
            instances of this class with <see cref="T:System.Text.Json.JsonSerializer"/>; as such, upon deserialization, this property will be <see langword="null"/>.
            Consumers should not rely on <see langword="null"/> indicating success. 
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.FunctionCallContent.CreateFromParsedArguments``1(``0,System.String,System.String,System.Func{``0,System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Extensions.AI.FunctionCallContent"/> parsing arguments using a specified encoding and parser.
            </summary>
            <typeparam name="TEncoding">The encoding format from which to parse function call arguments.</typeparam>
            <param name="encodedArguments">The input arguments encoded in <typeparamref name="TEncoding"/>.</param>
            <param name="callId">The function call ID.</param>
            <param name="name">The function name.</param>
            <param name="argumentParser">The parsing implementation converting the encoding to a dictionary of arguments.</param>
            <returns>A new instance of <see cref="T:Microsoft.Extensions.AI.FunctionCallContent"/> containing the parse result.</returns>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionCallContent.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.FunctionResultContent">
            <summary>
            Represents the result of a function call.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.FunctionResultContent.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionResultContent"/> class.
            </summary>
            <param name="callId">The function call ID for which this is the result.</param>
            <param name="result">
            <see langword="null"/> if the function returned <see langword="null"/> or was void-returning
            and thus had no result, or if the function call failed. Typically, however, to provide meaningfully representative
            information to an AI service, a human-readable representation of those conditions should be supplied.
            </param>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionResultContent.CallId">
            <summary>
            Gets the ID of the function call for which this is the result.
            </summary>
            <remarks>
            If this is the result for a <see cref="T:Microsoft.Extensions.AI.FunctionCallContent"/>, this property should contain the same
            <see cref="P:Microsoft.Extensions.AI.FunctionCallContent.CallId"/> value.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionResultContent.Result">
            <summary>
            Gets or sets the result of the function call, or a generic error message if the function call failed.
            </summary>
            <remarks>
            <see langword="null"/> if the function returned <see langword="null"/> or was void-returning
            and thus had no result, or if the function call failed. Typically, however, to provide meaningfully representative
            information to an AI service, a human-readable representation of those conditions should be supplied.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionResultContent.Exception">
            <summary>
            Gets or sets an exception that occurred if the function call failed.
            </summary>
            <remarks>
            This property is for informational purposes only. The <see cref="P:Microsoft.Extensions.AI.FunctionResultContent.Exception"/> is not serialized as part of serializing
            instances of this class with <see cref="T:System.Text.Json.JsonSerializer"/>. As such, upon deserialization, this property will be <see langword="null"/>.
            Consumers should not rely on <see langword="null"/> indicating success.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.FunctionResultContent.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.TextContent">
            <summary>
            Represents text content in a chat.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.TextContent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.TextContent"/> class.
            </summary>
            <param name="text">The text content.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.TextContent.Text">
            <summary>
            Gets or sets the text content.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.TextContent.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.AI.UsageContent">
            <summary>
            Represents usage information associated with a chat request and response.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.AI.UsageContent._details">
            <summary>Usage information.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.UsageContent.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UsageContent"/> class with an empty <see cref="T:Microsoft.Extensions.AI.UsageDetails"/>.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.UsageContent.#ctor(Microsoft.Extensions.AI.UsageDetails)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UsageContent"/> class with the specified <see cref="T:Microsoft.Extensions.AI.UsageDetails"/> instance.</summary>
            <param name="details">The usage details to store in this content.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageContent.Details">
            <summary>Gets or sets the usage information.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageContent.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2">
            <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> that passes through calls to another instance.
            </summary>
            <typeparam name="TInput">The type of the input passed to the generator.</typeparam>
            <typeparam name="TEmbedding">The type of the embedding instance produced by the generator.</typeparam>
            <remarks>
            This type is recommended as a base type when building generators that can be chained in any order around an underlying <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/>.
            The default implementation simply passes each call to the inner generator instance.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.#ctor(Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2"/> class.
            </summary>
            <param name="innerGenerator">The wrapped generator instance.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.InnerGenerator">
            <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.GetService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose(System.Boolean)">
            <summary>Provides a mechanism for releasing unmanaged resources.</summary>
            <param name="disposing"><see langword="true"/> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose"/>; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="T:Microsoft.Extensions.AI.Embedding">
            <summary>Represents an embedding generated by a <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/>.</summary>
            <remarks>This base class provides metadata about the embedding. Derived types provide the concrete data contained in the embedding.</remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.Embedding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Embedding"/> class.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.Embedding.CreatedAt">
            <summary>Gets or sets a timestamp at which the embedding was created.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.Embedding.ModelId">
            <summary>Gets or sets the model ID using in the creation of the embedding.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.Embedding.AdditionalProperties">
            <summary>Gets or sets any additional properties associated with the embedding.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.EmbeddingGenerationOptions">
            <summary>Represents the options for an embedding generation request.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.Dimensions">
            <summary>Gets or sets the number of dimensions requested in the embedding.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.ModelId">
            <summary>Gets or sets the model ID for the embedding generation request.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.AdditionalProperties">
            <summary>Gets or sets additional properties for the embedding generation request.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGenerationOptions.Clone">
            <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.EmbeddingGenerationOptions"/> instance.</summary>
            <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.EmbeddingGenerationOptions"/> instance.</returns>
            <remarks>
            The clone will have the same values for all properties as the original instance. Any collections, like <see cref="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.AdditionalProperties"/>
            are shallow-cloned, meaning a new collection instance is created, but any references contained by the collections are shared with the original.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions">
            <summary>Provides a collection of static methods for extending <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> instances.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GetService``3(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1},System.Object)">
            <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> for an object of type <typeparamref name="TService"/>.</summary>
            <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
            <typeparam name="TEmbedding">The numeric type of the embedding data.</typeparam>
            <typeparam name="TService">The type of the object to be retrieved.</typeparam>
            <param name="generator">The generator.</param>
            <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
            <returns>The found object, otherwise <see langword="null"/>.</returns>
            <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that may be provided by the
            <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/>, including itself or any services it might be wrapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GetService``1(Microsoft.Extensions.AI.IEmbeddingGenerator{System.String,Microsoft.Extensions.AI.Embedding{System.Single}},System.Object)">
            <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> for an object of type <typeparamref name="TService"/>.</summary>
            <typeparam name="TService">The type of the object to be retrieved.</typeparam>
            <param name="generator">The generator.</param>
            <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
            <returns>The found object, otherwise <see langword="null"/>.</returns>
            <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that may be provided by the
            <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/>, including itself or any services it might be wrapping.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateEmbeddingVectorAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,Microsoft.Extensions.AI.Embedding{``1}},``0,Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary>Generates an embedding vector from the specified <paramref name="value"/>.</summary>
            <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
            <typeparam name="TEmbeddingElement">The numeric type of the embedding data.</typeparam>
            <param name="generator">The embedding generator.</param>
            <param name="value">A value from which an embedding will be generated.</param>
            <param name="options">The embedding generation options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The generated embedding for the specified <paramref name="value"/>.</returns>
            <remarks>
            This operation is equivalent to using <see cref="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateEmbeddingAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1},``0,Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)"/> and returning the
            resulting <see cref="T:Microsoft.Extensions.AI.Embedding`1"/>'s <see cref="P:Microsoft.Extensions.AI.Embedding`1.Vector"/> property.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateEmbeddingAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1},``0,Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary>Generates an embedding from the specified <paramref name="value"/>.</summary>
            <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
            <typeparam name="TEmbedding">The type of embedding to generate.</typeparam>
            <param name="generator">The embedding generator.</param>
            <param name="value">A value from which an embedding will be generated.</param>
            <param name="options">The embedding generation options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            The generated embedding for the specified <paramref name="value"/>.
            </returns>
            <remarks>
            This operations is equivalent to using <see cref="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)"/> with a
            collection composed of the single <paramref name="value"/> and then returning the first embedding element from the
            resulting <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1"/> collection.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateAndZipAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1},System.Collections.Generic.IEnumerable{``0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary>
            Generates embeddings for each of the supplied <paramref name="values"/> and produces a list that pairs
            each input value with its resulting embedding.
            </summary>
            <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
            <typeparam name="TEmbedding">The type of embedding to generate.</typeparam>
            <param name="generator">The embedding generator.</param>
            <param name="values">The collection of values for which to generate embeddings.</param>
            <param name="options">The embedding generation options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>An array containing tuples of the input values and the associated generated embeddings.</returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata">
            <summary>Provides metadata about an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/>.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.#ctor(System.String,System.Uri,System.String,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata"/> class.</summary>
            <param name="providerName">
            The name of the embedding generation provider, if applicable. Where possible, this should map to the
            appropriate name defined in the OpenTelemetry Semantic Conventions for Generative AI systems.
            </param>
            <param name="providerUri">The URL for accessing the embedding generation provider, if applicable.</param>
            <param name="modelId">The ID of the embedding generation model used, if applicable.</param>
            <param name="dimensions">The number of dimensions in vectors produced by this generator, if applicable.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.ProviderName">
            <summary>Gets the name of the embedding generation provider.</summary>
            <remarks>
            Where possible, this maps to the appropriate name defined in the
            OpenTelemetry Semantic Conventions for Generative AI systems.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.ProviderUri">
            <summary>Gets the URL for accessing the embedding generation provider.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.ModelId">
            <summary>Gets the ID of the model used by this embedding generation provider.</summary>
            <remarks>
            This value can be null if either the name is unknown or there are multiple possible models associated with this instance.
            An individual request may override this value via <see cref="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.ModelId"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.Dimensions">
            <summary>Gets the number of dimensions in the embeddings produced by this instance.</summary>
            <remarks>
            This value can be null if either the number of dimensions is unknown or there are multiple possible lengths associated with this instance.
            An individual request may override this value via <see cref="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.Dimensions"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.Embedding`1">
            <summary>Represents an embedding composed of a vector of <typeparamref name="T"/> values.</summary>
            <typeparam name="T">The type of the values in the embedding vector.</typeparam>
            <remarks>Typical values of <typeparamref name="T"/> are <see cref="T:System.Single"/>, <see cref="T:System.Double"/>, or Half.</remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.Embedding`1.#ctor(System.ReadOnlyMemory{`0})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Embedding`1"/> class with the embedding vector.</summary>
            <param name="vector">The embedding vector this embedding represents.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.Embedding`1.Vector">
            <summary>Gets or sets the embedding vector this embedding represents.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1">
            <summary>Represents the result of an operation to generate embeddings.</summary>
            <typeparam name="TEmbedding">Specifies the type of the generated embeddings.</typeparam>
        </member>
        <member name="F:Microsoft.Extensions.AI.GeneratedEmbeddings`1._embeddings">
            <summary>The underlying list of embeddings.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1"/> class.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1"/> class with the specified capacity.</summary>
            <param name="capacity">The number of embeddings that the new list can initially store.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1"/> class that contains all of the embeddings from the specified collection.
            </summary>
            <param name="embeddings">The collection whose embeddings are copied to the new list.</param>
        </member>
        <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Usage">
            <summary>Gets or sets usage details for the embeddings' generation.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.AdditionalProperties">
            <summary>Gets or sets any additional properties associated with the embeddings.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.System#Collections#Generic#ICollection{TEmbedding}#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Adds the embeddings from the specified collection to the end of this list.</summary>
            <param name="items">The collection whose elements should be added to this list.</param>
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.CopyTo(`0[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.IndexOf(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Insert(System.Int32,`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Remove(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2">
            <summary>Represents a generator of embeddings.</summary>
            <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
            <typeparam name="TEmbedding">The type of embeddings to generate.</typeparam>
            <remarks>
            <para>
            Unless otherwise specified, all members of <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> are thread-safe for concurrent use.
            It is expected that all implementations of <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> support being used by multiple requests concurrently.
            </para>
            <para>
            However, implementations of <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> may mutate the arguments supplied to
            <see cref="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)"/>, such as by adding additional values to the values list or configuring the options
            instance. Thus, consumers of the interface either should avoid using shared instances of these arguments for concurrent
            invocations or should otherwise ensure by construction that no <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> instances
            are used which might employ such mutation.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <summary>Generates embeddings for each of the supplied <paramref name="values"/>.</summary>
            <param name="values">The collection of values for which to generate embeddings.</param>
            <param name="options">The embedding generation options to configure the request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The generated embeddings.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GetService(System.Type,System.Object)">
            <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/> for an object of the specified type <paramref name="serviceType"/>.</summary>
            <param name="serviceType">The type of object being requested.</param>
            <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
            <returns>The found object, otherwise <see langword="null"/>.</returns>
            <remarks>
            The purpose of this method is to allow for the retrieval of strongly typed services that might be provided by the
            <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2"/>, including itself or any services it might be wrapping.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.AIFunction">
            <summary>Represents a function that can be described to an AI service and invoked.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIFunction.JsonSchema">
            <summary>Gets a JSON Schema describing the function and its input parameters.</summary>
            <remarks>
            <para>
            When specified, declares a self-contained JSON schema document that describes the function and its input parameters.
            A simple example of a JSON schema for a function that adds two numbers together is shown below:
            </para>
            <code>
            {
              "title" : "addNumbers",
              "description": "A simple function that adds two numbers together.",
              "type": "object",
              "properties": {
                "a" : { "type": "number" },
                "b" : { "type": "number", "default": 1 }
              }, 
              "required" : ["a"]
            }
            </code>
            <para>
            The metadata present in the schema document plays an important role in guiding AI function invocation.
            </para>
            <para>
            When no schema is specified, consuming chat clients should assume the "{}" or "true" schema, indicating that any JSON input is admissible.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIFunction.UnderlyingMethod">
            <summary>
            Gets the underlying <see cref="T:System.Reflection.MethodInfo"/> that this <see cref="T:Microsoft.Extensions.AI.AIFunction"/> might be wrapping.
            </summary>
            <remarks>
            Provides additional metadata on the function and its signature. Implementations not wrapping .NET methods may return <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions">
            <summary>Gets a <see cref="P:Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions"/> that can be used to marshal function parameters.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Threading.CancellationToken)">
            <summary>Invokes the <see cref="T:Microsoft.Extensions.AI.AIFunction"/> and returns its result.</summary>
            <param name="arguments">The arguments to pass to the function's invocation.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>The result of the function's execution.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIFunction.InvokeCoreAsync(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Threading.CancellationToken)">
            <summary>Invokes the <see cref="T:Microsoft.Extensions.AI.AIFunction"/> and returns its result.</summary>
            <param name="arguments">The arguments to pass to the function's invocation.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to monitor for cancellation requests.</param>
            <returns>The result of the function's execution.</returns>
        </member>
        <member name="T:Microsoft.Extensions.AI.UsageDetails">
            <summary>Provides usage details about a request/response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageDetails.InputTokenCount">
            <summary>Gets or sets the number of tokens in the input.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageDetails.OutputTokenCount">
            <summary>Gets or sets the number of tokens in the output.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageDetails.TotalTokenCount">
            <summary>Gets or sets the total number of tokens used to produce the response.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageDetails.AdditionalCounts">
            <summary>Gets or sets a dictionary of additional usage counts.</summary>
            <remarks>
            All values set here are assumed to be summable. For example, when middleware makes multiple calls to an underlying
            service, it may sum the counts from multiple results to produce an overall <see cref="T:Microsoft.Extensions.AI.UsageDetails"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.UsageDetails.Add(Microsoft.Extensions.AI.UsageDetails)">
            <summary>Adds usage data from another <see cref="T:Microsoft.Extensions.AI.UsageDetails"/> into this instance.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.UsageDetails.DebuggerDisplay">
            <summary>Gets a string representing this instance to display in the debugger.</summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AIJsonSchemaCreateContext">
            <summary>
            Defines the context in which a JSON schema within a type graph is being generated.
            </summary>
            <remarks>
            This struct is being passed to the user-provided <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.TransformSchemaNode"/> 
            callback by the <see cref="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateJsonSchema(System.Type,System.String,System.Boolean,System.Object,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)"/> method and cannot be instantiated directly.
            </remarks>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.Path">
            <summary>
            Gets the path to the schema document currently being generated.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.TypeInfo">
            <summary>
            Gets the <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo"/> for the type being processed.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.BaseTypeInfo">
            <summary>
            Gets the type info for the polymorphic base type if generated as a derived type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.PropertyInfo">
            <summary>
            Gets the <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo"/> if the schema is being generated for a property.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.DeclaringType">
            <summary>
            Gets the declaring type of the property or parameter being processed.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.PropertyAttributeProvider">
            <summary>
            Gets the <see cref="T:System.Reflection.ICustomAttributeProvider"/> corresponding to the property or field being processed.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.ParameterAttributeProvider">
            <summary>
            Gets the <see cref="T:System.Reflection.ICustomAttributeProvider"/> of the
            constructor parameter associated with the accompanying <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.PropertyInfo"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.GetCustomAttribute``1(System.Boolean)">
            <summary>
            Retrieves a custom attribute of a specified type that is applied to the specified schema node context.
            </summary>
            <typeparam name="TAttribute">The type of attribute to search for.</typeparam>
            <param name="inherit">If <see langword="true"/>, specifies to also search the ancestors of the context members for custom attributes.</param>
            <returns>The first occurrence of <typeparamref name="TAttribute"/> if found, or <see langword="null"/> otherwise.</returns>
            <remarks>
            This helper method resolves attributes from context locations in the following order:
            <list type="number">
            <item>Attributes specified on the property of the context, if specified.</item>
            <item>Attributes specified on the constructor parameter of the context, if specified.</item>
            <item>Attributes specified on the type of the context.</item>
            </list>
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions">
            <summary>
            Provides options for configuring the behavior of <see cref="T:Microsoft.Extensions.AI.AIJsonUtilities"/> JSON schema creation functionality.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.Default">
            <summary>
            Gets the default options instance.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.TransformSchemaNode">
            <summary>
            Gets a callback that is invoked for every schema that is generated within the type graph.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.IncludeTypeInEnumSchemas">
            <summary>
            Gets a value indicating whether to include the type keyword in inferred schemas for .NET enums.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.DisallowAdditionalProperties">
            <summary>
            Gets a value indicating whether to generate schemas with the additionalProperties set to false for .NET objects.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.IncludeSchemaKeyword">
            <summary>
            Gets a value indicating whether to include the $schema keyword in inferred schemas.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.RequireAllProperties">
            <summary>
            Gets a value indicating whether to mark all properties as required in the schema.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.AI.AIJsonUtilities">
            <summary>Provides a collection of utility methods for marshalling JSON data.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType``1(System.Text.Json.JsonSerializerOptions,System.String)">
            <summary>
            Adds a custom content type to the polymorphic configuration for <see cref="T:Microsoft.Extensions.AI.AIContent"/>.
            </summary>
            <typeparam name="TContent">The custom content type to configure.</typeparam>
            <param name="options">The options instance to configure.</param>
            <param name="typeDiscriminatorId">The type discriminator id for the content type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options"/> or <paramref name="typeDiscriminatorId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><typeparamref name="TContent"/> is a built-in content type.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="options"/> is a read-only instance.</exception>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType(System.Text.Json.JsonSerializerOptions,System.Type,System.String)">
            <summary>
            Adds a custom content type to the polymorphic configuration for <see cref="T:Microsoft.Extensions.AI.AIContent"/>.
            </summary>
            <param name="options">The options instance to configure.</param>
            <param name="contentType">The custom content type to configure.</param>
            <param name="typeDiscriminatorId">The type discriminator id for the content type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options"/>, <paramref name="contentType"/>, or <paramref name="typeDiscriminatorId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="contentType"/> is a built-in content type or does not derived from <see cref="T:Microsoft.Extensions.AI.AIContent"/>.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="options"/> is a read-only instance.</exception>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions"/> singleton used as the default in JSON serialization operations.
            </summary>
            <remarks>
            <para>For Native AOT or applications disabling <see cref="P:System.Text.Json.JsonSerializer.IsReflectionEnabledByDefault"/> this instance includes source generated contracts
            for all common exchange types contained in the Microsoft.Extensions.AI.Abstractions library.
            </para>
            <para>
            It additionally turns on the following settings:
            <list type="number">
            <item>Enables the <see cref="P:System.Text.Json.JsonSerializerOptions.WriteIndented"/> property.</item>
            <item>Enables string based enum serialization as implemented by <see cref="T:System.Text.Json.Serialization.JsonStringEnumConverter"/>.</item>
            <item>Enables <see cref="F:System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull"/> as the default ignore condition for properties.</item>
            <item>
            Enables <see cref="P:System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping"/> when escaping JSON strings.
            Consuming applications must ensure that JSON outputs are adequately escaped before embedding in other document formats, such as HTML and XML.
            </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateDefaultOptions">
            <summary>Creates the default <see cref="T:System.Text.Json.JsonSerializerOptions"/> to use for serialization-related operations.</summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Double">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Single">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableSingle">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.AdditionalPropertiesDictionary">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.AdditionalPropertiesDictionaryInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.AIContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.AutoChatToolMode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatClientMetadata">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatFinishReason">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableChatFinishReason">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatMessage">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatOptions">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatResponseFormat">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatResponseFormatJson">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatResponseFormatText">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatResponseUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatRole">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableChatRole">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ChatToolMode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.DataContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Embedding">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingDouble">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingSingle">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingHalf">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingSByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingGenerationOptions">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.EmbeddingGeneratorMetadata">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.FunctionCallContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.FunctionResultContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NoneChatToolMode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.RequiredChatToolMode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.TextContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.UsageContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.UsageDetails">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.DictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IDictionaryInt32Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IDictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IEnumerableString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IListAIContent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IListChatMessage">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IListString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.IReadOnlyListChatResponseUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.DateTimeOffset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableDateTimeOffset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Half">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ReadOnlyMemoryByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ReadOnlyMemoryDouble">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ReadOnlyMemorySingle">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ReadOnlyMemoryHalf">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ReadOnlyMemoryInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.ReadOnlyMemorySByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.JsonDocument">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.JsonElement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableJsonElement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.JsonNode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.TimeSpan">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Uri">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Int64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.NullableInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Object">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.SByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.JsonContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="F:Microsoft.Extensions.AI.AIJsonUtilities.SchemaKeywordUri">
            <summary>The uri used when populating the $schema keyword in inferred schemas.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateFunctionJsonSchema(System.Reflection.MethodBase,System.String,System.String,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
            <summary>
            Determines a JSON schema for the provided method.
            </summary>
            <param name="method">The method from which to extract schema information.</param>
            <param name="title">The title keyword used by the method schema.</param>
            <param name="description">The description keyword used by the method schema.</param>
            <param name="serializerOptions">The options used to extract the schema from the specified type.</param>
            <param name="inferenceOptions">The options controlling schema inference.</param>
            <returns>A JSON schema document encoded as a <see cref="T:System.Text.Json.JsonElement"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateJsonSchema(System.Type,System.String,System.Boolean,System.Object,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
            <summary>Creates a JSON schema for the specified type.</summary>
            <param name="type">The type for which to generate the schema.</param>
            <param name="description">The description of the parameter.</param>
            <param name="hasDefaultValue"><see langword="true"/> if the parameter is optional; otherwise, <see langword="false"/>.</param>
            <param name="defaultValue">The default value of the optional parameter, if applicable.</param>
            <param name="serializerOptions">The options used to extract the schema from the specified type.</param>
            <param name="inferenceOptions">The options controlling schema inference.</param>
            <returns>A <see cref="T:System.Text.Json.JsonElement"/> representing the schema.</returns>
        </member>
        <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultJsonSchema">
            <summary>Gets the default JSON schema to be used by types or functions.</summary>
        </member>
        <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.ValidateSchemaDocument(System.Text.Json.JsonElement,System.String)">
            <summary>Validates the provided JSON schema document.</summary>
        </member>
    </members>
</doc>
